<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:db.properties,classpath:redis.properties"/>
	
	<!-- 配置C3P0数据源 -->
	<bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${mysql.driver}"/>
		<property name="jdbcUrl" value="${mysql.url}"/>
		<property name="user" value="${mysql.username}"/>
		<property name="password" value="${mysql.password}"/>
		<!-- 当连接池中的连接耗尽的时候c3p0一次同事获取的链接数 -->
		<property name="acquireIncrement" value="${mysql.acquireIncrement}"/>
		<property name="initialPoolSize" value="${mysql.initialPoolSize}"/>
		<property name="minPoolSize" value="${mysql.minPoolSize}"/>
		<property name="maxPoolSize" value="${mysql.maxPoolSize}"/>
	
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- mybaits配置文件的路径 -->
		<property name="configLocation" value="classpath:mybatisCfg.xml"></property>
		<!-- 注入数据源 -->
		<property name="dataSource" ref="datasource"></property>
		<!-- sql映射文件 -->
		<property name="mapperLocations" value="classpath:mapping/*.xml"></property>
		<!-- 扫描entity包使用别名 -->
		<property name="typeAliasesPackage" value="com.ssm.entity"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="basePackage" value="com.ssm.dao"></property>
	
	</bean>
	
	
	<!-- 定义事务管理器，由spring管理事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource"></property>
	</bean>
	
	
	<!-- 支持注解驱动的事务管理，指定事务管理器 -->
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	<context:component-scan base-package="com.ssm"></context:component-scan>
	
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	
	
	
	<!-- redis config -->
	<!-- 配置JedisPoolConfig实例 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}"></property>
		<property name="maxTotal" value="${redis.maxActive}"></property>
		<property name="maxWaitMillis" value="${redis.maxWait}"></property>
		<property name="testOnBorrow" value="${redis.testOnBorrow}"></property>
	</bean>
	
	<!-- 配置JedisConnectionFactory -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="database" value="${redis.dbIndex}"></property>
		<property name="poolConfig" ref="poolConfig"></property>
	
	</bean>
	
	<!-- 配置RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"></property>
	</bean>
	<!-- 配置RedisCacheManager -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate"></constructor-arg>
		<property name="defaultExpiration" value="${redis.expiration}"></property>
	</bean>
	
	<!-- 配置RedisCacheConfig -->
	<bean	id="redisCacheConfig" class="com.ssm.utils.RedisCacheConfig">
		<constructor-arg ref="jedisConnectionFactory"></constructor-arg>
		<constructor-arg ref="redisTemplate"></constructor-arg>
		<constructor-arg ref="redisCacheManager"></constructor-arg>
	
	</bean>


</beans>
